predicate minicpp_all_different(array [int] of var int: x);
var 1..10: X_INTRODUCED_0_;
var 1..10: X_INTRODUCED_1_;
var 1..10: X_INTRODUCED_2_;
var 1..10: X_INTRODUCED_3_;
var 1..10: X_INTRODUCED_4_;
var 1..10: X_INTRODUCED_5_;
var 1..10: X_INTRODUCED_6_;
var 1..10: X_INTRODUCED_7_;
var 1..10: X_INTRODUCED_8_;
var 1..10: X_INTRODUCED_9_;
var 2..11: X_INTRODUCED_11_ ::var_is_introduced :: is_defined_var;
var 3..12: X_INTRODUCED_12_ ::var_is_introduced :: is_defined_var;
var 4..13: X_INTRODUCED_13_ ::var_is_introduced :: is_defined_var;
var 5..14: X_INTRODUCED_14_ ::var_is_introduced :: is_defined_var;
var 6..15: X_INTRODUCED_15_ ::var_is_introduced :: is_defined_var;
var 7..16: X_INTRODUCED_16_ ::var_is_introduced :: is_defined_var;
var 8..17: X_INTRODUCED_17_ ::var_is_introduced :: is_defined_var;
var 9..18: X_INTRODUCED_18_ ::var_is_introduced :: is_defined_var;
var 10..19: X_INTRODUCED_19_ ::var_is_introduced :: is_defined_var;
var 11..20: X_INTRODUCED_20_ ::var_is_introduced :: is_defined_var;
var 0..9: X_INTRODUCED_22_ ::var_is_introduced :: is_defined_var;
var -1..8: X_INTRODUCED_23_ ::var_is_introduced :: is_defined_var;
var -2..7: X_INTRODUCED_24_ ::var_is_introduced :: is_defined_var;
var -3..6: X_INTRODUCED_25_ ::var_is_introduced :: is_defined_var;
var -4..5: X_INTRODUCED_26_ ::var_is_introduced :: is_defined_var;
var -5..4: X_INTRODUCED_27_ ::var_is_introduced :: is_defined_var;
var -6..3: X_INTRODUCED_28_ ::var_is_introduced :: is_defined_var;
var -7..2: X_INTRODUCED_29_ ::var_is_introduced :: is_defined_var;
var -8..1: X_INTRODUCED_30_ ::var_is_introduced :: is_defined_var;
var -9..0: X_INTRODUCED_31_ ::var_is_introduced :: is_defined_var;
array [1..10] of var int: q:: output_array([1..10]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_];
array [1..10] of var int: X_INTRODUCED_21_ ::var_is_introduced  = [X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,X_INTRODUCED_20_];
array [1..10] of var int: X_INTRODUCED_32_ ::var_is_introduced  = [X_INTRODUCED_22_,X_INTRODUCED_23_,X_INTRODUCED_24_,X_INTRODUCED_25_,X_INTRODUCED_26_,X_INTRODUCED_27_,X_INTRODUCED_28_,X_INTRODUCED_29_,X_INTRODUCED_30_,X_INTRODUCED_31_];
constraint minicpp_all_different(q);
constraint minicpp_all_different(X_INTRODUCED_21_);
constraint minicpp_all_different(X_INTRODUCED_32_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_0_,X_INTRODUCED_11_],-1):: defines_var(X_INTRODUCED_11_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_1_,X_INTRODUCED_12_],-2):: defines_var(X_INTRODUCED_12_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_2_,X_INTRODUCED_13_],-3):: defines_var(X_INTRODUCED_13_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_3_,X_INTRODUCED_14_],-4):: defines_var(X_INTRODUCED_14_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_4_,X_INTRODUCED_15_],-5):: defines_var(X_INTRODUCED_15_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_5_,X_INTRODUCED_16_],-6):: defines_var(X_INTRODUCED_16_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_6_,X_INTRODUCED_17_],-7):: defines_var(X_INTRODUCED_17_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_7_,X_INTRODUCED_18_],-8):: defines_var(X_INTRODUCED_18_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_8_,X_INTRODUCED_19_],-9):: defines_var(X_INTRODUCED_19_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_9_,X_INTRODUCED_20_],-10):: defines_var(X_INTRODUCED_20_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_0_,X_INTRODUCED_22_],1):: defines_var(X_INTRODUCED_22_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_1_,X_INTRODUCED_23_],2):: defines_var(X_INTRODUCED_23_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_2_,X_INTRODUCED_24_],3):: defines_var(X_INTRODUCED_24_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_3_,X_INTRODUCED_25_],4):: defines_var(X_INTRODUCED_25_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_4_,X_INTRODUCED_26_],5):: defines_var(X_INTRODUCED_26_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_5_,X_INTRODUCED_27_],6):: defines_var(X_INTRODUCED_27_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_6_,X_INTRODUCED_28_],7):: defines_var(X_INTRODUCED_28_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_7_,X_INTRODUCED_29_],8):: defines_var(X_INTRODUCED_29_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_8_,X_INTRODUCED_30_],9):: defines_var(X_INTRODUCED_30_);
constraint int_lin_eq([1,-1],[X_INTRODUCED_9_,X_INTRODUCED_31_],10):: defines_var(X_INTRODUCED_31_);
solve :: int_search(q,first_fail,indomain_min,complete) satisfy;
