predicate int_lin_le_imp(array [int] of int: as,array [int] of var int: bs,int: c,var bool: r);
predicate minicpp_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
predicate array_bool_or_reif(array [int] of var bool: as,var bool: r);
array [1..2] of int: X_INTRODUCED_23_ = [1,-1];
array [1..16] of int: X_INTRODUCED_50_ = [1,1,3,2,1,2,1,2,3,2,3,3,1,3,1,1];
array [1..16] of int: X_INTRODUCED_51_ = [3,4,1,2,3,3,2,3,1,3,4,4,5,2,1,3];
array [1..16] of int: X_INTRODUCED_53_ = [2,2,2,2,1,1,2,1,1,2,2,2,2,2,2,1];
array [1..16] of int: X_INTRODUCED_54_ = [3,1,1,4,1,3,3,2,3,3,3,4,5,2,1,3];
array [1..10] of int: X_INTRODUCED_56_ = [2,2,2,1,2,2,2,2,2,1];
array [1..10] of int: X_INTRODUCED_57_ = [3,4,1,3,3,3,3,4,4,1];
var 0..51: X_INTRODUCED_0_;
var 0..51: X_INTRODUCED_1_;
var 0..51: X_INTRODUCED_2_;
var 0..51: X_INTRODUCED_3_;
var 0..51: X_INTRODUCED_4_;
var 0..51: X_INTRODUCED_5_;
var 0..51: X_INTRODUCED_6_;
var 0..51: X_INTRODUCED_7_;
var 0..51: X_INTRODUCED_8_;
var 0..51: X_INTRODUCED_9_;
var 0..51: X_INTRODUCED_10_;
var 0..51: X_INTRODUCED_11_;
var 0..51: X_INTRODUCED_12_;
var 0..51: X_INTRODUCED_13_;
var 0..51: X_INTRODUCED_14_;
var 0..51: X_INTRODUCED_15_;
var 0..51: X_INTRODUCED_16_;
var 0..51: X_INTRODUCED_17_;
var 0..51: X_INTRODUCED_18_;
var 0..51: X_INTRODUCED_19_;
var 0..52: objective:: output_var;
var bool: X_INTRODUCED_32_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49_ ::var_is_introduced :: is_defined_var;
array [1..20] of var int: s:: output_array([1..20]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_];
array [1..16] of var int: X_INTRODUCED_52_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_];
array [1..16] of var int: X_INTRODUCED_55_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_];
array [1..10] of var int: X_INTRODUCED_58_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_6_,X_INTRODUCED_9_,X_INTRODUCED_11_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_18_];
array [1..21] of var int: X_INTRODUCED_68_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_,X_INTRODUCED_17_,X_INTRODUCED_18_,X_INTRODUCED_19_,objective];
array [1..2] of var bool: X_INTRODUCED_69_ ::var_is_introduced  = [X_INTRODUCED_32_,X_INTRODUCED_34_];
array [1..2] of var bool: X_INTRODUCED_70_ ::var_is_introduced  = [X_INTRODUCED_35_,X_INTRODUCED_36_];
array [1..2] of var bool: X_INTRODUCED_71_ ::var_is_introduced  = [X_INTRODUCED_37_,X_INTRODUCED_39_];
array [1..2] of var bool: X_INTRODUCED_72_ ::var_is_introduced  = [X_INTRODUCED_40_,X_INTRODUCED_41_];
array [1..2] of var bool: X_INTRODUCED_73_ ::var_is_introduced  = [X_INTRODUCED_42_,X_INTRODUCED_43_];
array [1..2] of var bool: X_INTRODUCED_74_ ::var_is_introduced  = [X_INTRODUCED_44_,X_INTRODUCED_45_];
array [1..2] of var bool: X_INTRODUCED_75_ ::var_is_introduced  = [X_INTRODUCED_46_,X_INTRODUCED_47_];
array [1..2] of var bool: X_INTRODUCED_76_ ::var_is_introduced  = [X_INTRODUCED_48_,X_INTRODUCED_49_];
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_1_,X_INTRODUCED_14_],-1);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_4_,X_INTRODUCED_14_],-1);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_4_,X_INTRODUCED_19_],-1);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_5_,X_INTRODUCED_11_],-2);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_5_,X_INTRODUCED_17_],-2);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_9_,X_INTRODUCED_14_],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_11_,X_INTRODUCED_12_],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_12_,X_INTRODUCED_13_],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_12_,X_INTRODUCED_19_],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_13_,X_INTRODUCED_17_],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_14_,X_INTRODUCED_17_],-4);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_15_,X_INTRODUCED_18_],-4);
constraint minicpp_cumulative(X_INTRODUCED_52_,X_INTRODUCED_51_,X_INTRODUCED_50_,5);
constraint minicpp_cumulative(X_INTRODUCED_55_,X_INTRODUCED_54_,X_INTRODUCED_53_,4);
constraint minicpp_cumulative(X_INTRODUCED_58_,X_INTRODUCED_57_,X_INTRODUCED_56_,4);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_0_,objective],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_2_,objective],-1);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_3_,objective],-4);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_6_,objective],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_7_,objective],-3);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_8_,objective],-2);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_10_,objective],-1);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_16_,objective],-5);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_17_,objective],-2);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_18_,objective],-1);
constraint int_lin_le(X_INTRODUCED_23_,[X_INTRODUCED_19_,objective],-3);
constraint array_bool_or_reif(X_INTRODUCED_69_,true);
constraint array_bool_or_reif(X_INTRODUCED_70_,true);
constraint array_bool_or_reif(X_INTRODUCED_71_,true);
constraint array_bool_or_reif(X_INTRODUCED_72_,true);
constraint array_bool_or_reif(X_INTRODUCED_73_,true);
constraint array_bool_or_reif(X_INTRODUCED_74_,true);
constraint array_bool_or_reif(X_INTRODUCED_75_,true);
constraint array_bool_or_reif(X_INTRODUCED_76_,true);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_4_,X_INTRODUCED_10_],-1,X_INTRODUCED_32_):: defines_var(X_INTRODUCED_32_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_10_,X_INTRODUCED_4_],-1,X_INTRODUCED_34_):: defines_var(X_INTRODUCED_34_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_4_,X_INTRODUCED_15_],-1,X_INTRODUCED_35_):: defines_var(X_INTRODUCED_35_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_15_,X_INTRODUCED_4_],-4,X_INTRODUCED_36_):: defines_var(X_INTRODUCED_36_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_4_,X_INTRODUCED_17_],-1,X_INTRODUCED_37_):: defines_var(X_INTRODUCED_37_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_17_,X_INTRODUCED_4_],-2,X_INTRODUCED_39_):: defines_var(X_INTRODUCED_39_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_10_,X_INTRODUCED_14_],-1,X_INTRODUCED_40_):: defines_var(X_INTRODUCED_40_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_14_,X_INTRODUCED_10_],-4,X_INTRODUCED_41_):: defines_var(X_INTRODUCED_41_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_10_,X_INTRODUCED_15_],-1,X_INTRODUCED_42_):: defines_var(X_INTRODUCED_42_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_15_,X_INTRODUCED_10_],-4,X_INTRODUCED_43_):: defines_var(X_INTRODUCED_43_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_10_,X_INTRODUCED_17_],-1,X_INTRODUCED_44_):: defines_var(X_INTRODUCED_44_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_17_,X_INTRODUCED_10_],-2,X_INTRODUCED_45_):: defines_var(X_INTRODUCED_45_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_14_,X_INTRODUCED_15_],-4,X_INTRODUCED_46_):: defines_var(X_INTRODUCED_46_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_15_,X_INTRODUCED_14_],-4,X_INTRODUCED_47_):: defines_var(X_INTRODUCED_47_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_15_,X_INTRODUCED_17_],-4,X_INTRODUCED_48_):: defines_var(X_INTRODUCED_48_);
constraint int_lin_le_imp(X_INTRODUCED_23_,[X_INTRODUCED_17_,X_INTRODUCED_15_],-2,X_INTRODUCED_49_):: defines_var(X_INTRODUCED_49_);
solve :: int_search(X_INTRODUCED_68_,smallest,indomain_min,complete) minimize objective;
